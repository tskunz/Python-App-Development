version: '3.8'

services:
  api:
    build:
      context: ../..
      dockerfile: deployment/docker/Dockerfile
    ports:
      - "8000:8000"
    environment:
      - REDIS_URL=redis://cache:6379/0
      - DATABASE_URL=postgresql://user:password@db:5432/mlapp
      - MLFLOW_TRACKING_URI=http://mlflow:5000
    depends_on:
      - db
      - cache
      - mlflow
    volumes:
      - ../../:/app

  db:
    image: postgres:13
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=mlapp
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  cache:
    image: redis:6
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  mlflow:
    image: ghcr.io/mlflow/mlflow:v2.8.1
    ports:
      - "5000:5000"
    environment:
      - MLFLOW_TRACKING_URI=postgresql://user:password@db:5432/mlapp
    depends_on:
      - db
    command: mlflow server --host 0.0.0.0

  prometheus:
    image: prom/prometheus:v2.47.2
    volumes:
      - ../../config/monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:10.2.2
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus

volumes:
  postgres_data:
  redis_data:
  grafana_data: 